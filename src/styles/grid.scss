// GRID as css grid

// parent grid to layout items along a grid
@mixin grid($grid-count: $grid-column-count, $direction: ltr, $grid-row-gap: 0, $grid-column-gap: var(--gutter), $container: true, $align: flex-start) {
  @if ($container == true) {
    @include container;
  }
  // linear until $min-mobile, gives space for gap to not overflow
  display: grid;
  align-items: $align;
  gap: $grid-row-gap 0;
  grid-template-rows: auto;
  grid-template-columns: repeat($grid-count, minmax(0, 1fr));

  flex: none;
  direction: $direction;

  @if ($container == false) {
    width: 100%;
  }

  // mq should be more like ($grid-gutter (px value, not custom prop!) * $grid-column-count)
  @media (min-width: $min-mobile) {
    gap: $grid-row-gap $grid-column-gap;
  }
}

// individual column. use @include grid-item(5) where number = column span
@mixin grid-item($columns: 0, $offset: 0, $column-count: $grid-column-count) {
  @if ($columns > 0) {
    @if ($columns > $column-count or $columns + $offset > $column-count) {
      grid-column: 1 / -1;
    }

    @else {
      @if ($offset > 0) {
        grid-column-start: $offset + 1;
        grid-column-end: span $columns;
      } @else {
        grid-column-start: auto;
        grid-column-end: span $columns;
      }
    }
    
  } @else {
    grid-column-start: auto;
    grid-column-end: span $grid-column-count;
  }
}

// for nested in-grid flexible-grid using flexbox
// emergencies only, try not to use this
@mixin flex-grid($direction: ltr, $align: stretch, $justify: flex-start, $grid-gutter: $gutter, $wrap: wrap) {
  display: flex;
  flex-wrap: $wrap;

  align-items: $align;
  justify-content: $justify;

  margin-left: calc(var(--gutter) * -0.5);
  margin-right: calc(var(--gutter) * -0.5);

  @if $direction == ltr {
    flex-direction: row;
  }

  @else {
    flex-direction: row-reverse;
  }
}

// flex-grid item
@mixin flex-grid-item($width: $grid-column-count, $align: stretch, $grid-gutter: $gutter) {
  flex: none;
  align-self: $align;

  padding-left: calc(var(--gutter) * 0.5);
  padding-right: calc(var(--gutter) * 0.5);

  width: make-percentage($width, $grid-column-count);
}

@mixin grid-offset-left($offset: 1) {
  margin-left: make-percentage($offset, $grid-column-count);
}

@mixin grid-offset-right($offset: 1) {
  margin-right: make-percentage($offset, $grid-column-count);
}